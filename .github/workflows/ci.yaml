name: Python CI QA

on:
  push:
    branches: [QA]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: 'ejer_final'
          POSTGRES_USER: 'postgres'
          POSTGRES_PASSWORD: 'postgres'
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Wait for PostgreSQL
      run: sleep 20

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run app and tests
      run: |
        python --version
        sh manage.sh & python run.py &
        sleep 
        sh flake8
        pytest --cov=app ./tests

    - name: Check coverage
      run: |
        COVERAGE_THRESHOLD=80
        COVERAGE_OUTPUT=$(pytest --cov=app --cov-report=term-missing ./tests)
        ACTUAL_COVERAGE=$(echo "$COVERAGE_OUTPUT" | awk '/TOTAL/{print substr($4, 1, length($4)-1)}')
        echo "Coverage Percentage: $ACTUAL_COVERAGE%"
        
        if (( $(echo "$ACTUAL_COVERAGE >= $COVERAGE_THRESHOLD" | bc -l) )); then
          echo "Coverage is greater than or equal to $COVERAGE_THRESHOLD%. Creating pull request..."
          # Agrega aquí el comando para crear un pull request automáticamente.
          # Por ejemplo, usando la API de GitHub o la herramienta de línea de comandos `hub`.
        else
          echo "Coverage is below $COVERAGE_THRESHOLD%. No pull request will be created."
        fi
