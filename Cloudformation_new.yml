AWSTemplateFormatVersion: '2010-09-09'
Description: Plantilla para desplegar una aplicación Flask en Elastic Beanstalk con base de datos PostgreSQL.

Parameters:
  EnvironmentName:
    Type: String
    Default: App-Flask-Postgresql
    Description: Nombre del entorno de Elastic Beanstalk
  DBName:
    Type: String
    Default: ejer_final
    Description: Nombre de la base de datos PostgreSQL
  DBUsername:
    Type: String
    Default: postgres
    Description: Nombre de usuario de la base de datos PostgreSQL
  DBPassword:
    Type: String
    Default: postgres
    Description: Contraseña de la base de datos PostgreSQL

Resources:
  MyApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      ApplicationName: MyFlaskApp

  MyApplicationVersion:
    Type: AWS::ElasticBeanstalk::ApplicationVersion
    Properties:
      ApplicationName: !Ref MyApplication
      SourceBundle:
        S3Bucket: elasticbeanstalk-eu-west-1-071538442084
        S3Key: juangarciamontero/app25

  MyEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      EnvironmentName: !Ref EnvironmentName
      ApplicationName: !Ref MyApplication
      PlatformArn: "arn:aws:elasticbeanstalk:eu-west-1::platform/Docker AL2023 versión 4.2.2"
      OptionSettings:
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: SingleInstance
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: ServiceRole
          Value: aws-elasticbeanstalk-service-role

  MyEnvironmentConfiguration:
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
    Properties:
      ApplicationName: !Ref MyApplication
      Description: Configuration for App-Flask-Postgresql
      SolutionStackName: "64bit Amazon Linux 2 v3.6.4 running Corretto 11"

  MyDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t3.micro
      Engine: postgres
      EngineVersion: "13.8"
      DBName: !Ref DBName
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      AllocatedStorage: '20'
      PubliclyAccessible: true
      DBSubnetGroupName: !Ref MyDBSubnetGroup   # Utiliza el grupo de subredes que vamos a definir
      MultiAZ: true                              # Habilita la opción de múltiples zonas de disponibilidad

  MyDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: DB subnet group for RDS
      SubnetIds:
        - subnet-0eb6af1b004cd5ec2  # Reemplaza con el ID de una subred en una zona de disponibilidad diferente
        - subnet-07ded722110639b2e  # Reemplaza con el ID de una subred en otra zona de disponibilidad diferente

  InstallPackagesConfig:
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
    Properties:
      ApplicationName: !Ref MyApplication
      Description: Configuration to install additional packages
      SolutionStackName: "64bit Amazon Linux 2 v3.6.4 running Corretto 11"
      OptionSettings:
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: FLASK_ENV
          Value: development
        - Namespace: aws:elasticbeanstalk:container:python
          OptionName: WSGIPath
          Value: run.py
        - Namespace: aws:elasticbeanstalk:container:python
          OptionName: NumProcesses
          Value: '1'
        - Namespace: aws:elasticbeanstalk:container:python
          OptionName: NumThreads
          Value: '15'

Outputs:
  URL:
    Description: URL del entorno de Elastic Beanstalk
    Value: !Sub "http://${MyEnvironment.EndpointURL}"
